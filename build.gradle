
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.1'
	}
}

ext.springVersion = '5.0.0.RELEASE'
ext.slf4jVersion  = '1.7.25'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'

jacoco {
	toolVersion = "0.7.9"
}

group = 'org.jaffre'
version = '1.0.0-SNAPSHOT'

description = """jaffre"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
	compile group: 'org.springframework', name: 'spring-core', version: springVersion
	compile group: 'org.springframework', name: 'spring-context', version: springVersion

	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api',    version: '5.0.1'
	testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '4.12.1'
	testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.1'
}

task codeCoverageReport(type: JacocoReport) {
	sourceDirectories = files(sourceSets.main.java.srcDirs)
	classDirectories  = files(sourceSets.main.output)
	executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

	reports {
		xml.enabled true
		xml.destination file("${buildDir}/reports/jacoco/report.xml")
		html.enabled true
		csv.enabled false
	}
}

jar {
	manifest {
		from("src/main/resources/META-INF/MANIFEST.MF")
		attributes(
			"Implementation-Title": project.name,
			"Implementation-Version": version)
    }
}
